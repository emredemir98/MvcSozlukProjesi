@model EntityLayer.Concrete.Writer
@{
    ViewBag.Title = "WriterProfile";
    Layout = "~/Views/Shared/_WriterLayout.cshtml";
}

<h2>Yazar Düzenleme Sayfası</h2>
@using (Html.BeginForm("WriterProfile", "WriterPanel", FormMethod.Post))
{
<div class="form-group">

    @Html.HiddenFor(x => x.WriterID)
    <br />
    @Html.Label("Ad")
    @Html.TextBoxFor(x => x.WriterName, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterName)
    <br />
    @Html.Label("Soyad")
    @Html.TextBoxFor(x => x.WriterSurname, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterSurname)
    <br />
    @Html.Label("Mail")
    @Html.TextBoxFor(x => x.WriterMail, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterMail)
    <br />
    @Html.Label("Şifre")
    @Html.TextBoxFor(x => x.WriterPassword, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterPassword)
    <br />
    @Html.Label("Görsel Linki")
    @Html.TextBoxFor(x => x.WriterImage, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterImage)
    <br />
    @Html.Label("Ünvan")
    @Html.TextBoxFor(x => x.WriterTitle, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterTitle)
    <br />
    @Html.Label("Hakkında")
    @Html.TextBoxFor(x => x.WriterAbout, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterAbout)
    <br />
    <button class="btn btn-success">Değişiklikleri Uygula</button>
    <br /><br />
</div>
}
